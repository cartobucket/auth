syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.cartobucket.auth.rpc";
option java_outer_classname = "UserProto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "metadata.proto";


service Users {
  rpc CreateUser (UserCreateRequest) returns (UserCreateResponse) {};
  rpc ListUsers (UserListRequest) returns (UserListResponse) {};
  rpc DeleteUser (UserDeleteRequest) returns (UserResponse) {};
  rpc UpdateUser (UserUpdateRequest) returns (UserResponse) {};
  rpc GetUser (UserGetRequest) returns (UserResponse) {};
  rpc SetUserPassword (UserSetPasswordRequest) returns (UserSetPasswordResponse) {};
  rpc ValidateUserPassword (UserValidatePasswordRequest) returns (UserValidatePasswordResponse) {};
}

message UserCreateRequest {
  string authorizationServerId = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  google.protobuf.Struct profile = 5;
  Metadata metadata = 6;
}

message UserListRequest {
  repeated string authorizationServerIds = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message UserDeleteRequest {
  string id = 1;
}

message UserUpdateRequest {
  string id = 1;
  string username = 2;
  string email = 3;
  google.protobuf.Struct profile = 4;
  Metadata metadata = 5;
}

message UserGetRequest {
  string id = 1;
}

message UserGetByRequest {
  string id = 1;
}

message UserSetPasswordRequest {
  string id = 1;
  string password = 2;
}

message UserValidatePasswordRequest {
  string id = 1;
  string password = 2;
}

message UserCreateResponse {
  string id = 1;
  string authorizationServerId = 2;
  string username = 3;
  string email = 4;
  google.protobuf.Struct profile = 5;
  google.protobuf.Timestamp createdOn = 6;
  google.protobuf.Timestamp updatedOn = 7;
  Metadata metadata = 8;
}

message UserResponse {
  string id = 1;
  string authorizationServerId = 2;
  string username = 3;
  string email = 4;
  google.protobuf.Struct profile = 5;
  google.protobuf.Timestamp createdOn = 6;
  google.protobuf.Timestamp updatedOn = 7;
  Metadata metadata = 8;
}

message UserListResponse {
  repeated UserResponse users = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message UserSetPasswordResponse {
}

message UserValidatePasswordResponse {
  bool isValid = 1;
}