plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-container-image-jib'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    
    // OpenAPI support - included with Quarkus SmallRye OpenAPI
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'org.eclipse.microprofile.openapi:microprofile-openapi-api:3.1.1'
    
    
    // Jakarta APIs - Updated to latest versions
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:4.0.0'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1.MR'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    implementation 'jakarta.json.bind:jakarta.json.bind-api:3.0.1'
    
    implementation project(path: ':auth-data')
    
    testImplementation 'io.quarkus:quarkus-junit5'
}

group 'com.cartobucket.auth'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

// Quarkus will automatically generate OpenAPI spec from annotations
// Access at /q/openapi when running in dev mode

// Handle duplicate META-INF/beans.xml files
processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

sourceSets {
    main {
        java {
            srcDirs "$projectDir/src/main/java"
        }
        resources {
            srcDir "$projectDir/src/main/resources"
        }
    }
}